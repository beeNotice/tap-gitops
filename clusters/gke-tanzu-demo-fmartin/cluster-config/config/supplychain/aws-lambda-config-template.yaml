apiVersion: carto.run/v1alpha1
kind: ClusterConfigTemplate
metadata:
  name: aws-lambda-config-template
spec:
  configPath: .data
  healthRule:
    alwaysHealthy: {}

  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:yaml", "yaml")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    #@ def delivery():
    apiVersion: awsblueprints.io/v1alpha1
    kind: ServerlessApp
    metadata:
      name: #@ data.values.workload.metadata.name
    spec:
      imageName: #@ data.values.image
      memorySize: 128
      resourceConfig:
        providerConfigName: aws-provider-config
        region: us-west-1
    #@ end

    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ merge_labels({ "app.kubernetes.io/component": "config" })
    data:
      delivery.yml: #@ yaml.encode(delivery())
